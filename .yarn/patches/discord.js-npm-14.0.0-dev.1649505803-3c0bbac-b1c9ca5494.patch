diff --git a/typings/index.d.ts b/typings/index.d.ts
index 10b70e7661943b21362cc7832996f4f6d5ea51b8..8cef2fee6e8de71be275939c3344ed2ceaa815fb 100644
--- a/typings/index.d.ts
+++ b/typings/index.d.ts
@@ -1420,7 +1420,7 @@ export class IntentsBitField extends BitField<GatewayIntentsString> {
   public static resolve(bit?: BitFieldResolvable<GatewayIntentsString, number>): number;
 }
 
-export type CacheType = 'cached' | 'raw' | undefined;
+export type CacheType = 'cached' | 'raw' | 'DM' | 'cachedOrDM' | undefined;
 
 export type CacheTypeReducer<
   State extends CacheType,
@@ -1428,12 +1428,18 @@ export type CacheTypeReducer<
   RawType = CachedType,
   PresentType = CachedType | RawType,
   Fallback = PresentType | null,
+  DMType = CachedType,
+  CachedOrDMType = CachedType | DMType,
 > = [State] extends ['cached']
   ? CachedType
   : [State] extends ['raw']
   ? RawType
   : [State] extends ['raw' | 'cached']
   ? PresentType
+  : [State] extends ['DM']
+  ? DMType
+  : [State] extends ['cachedOrDM']
+  ? CachedOrDMType
   : Fallback;
 
 export class Interaction<Cached extends CacheType = CacheType> extends Base {
@@ -1446,7 +1452,8 @@ export class Interaction<Cached extends CacheType = CacheType> extends Base {
     GuildTextBasedChannel | null,
     GuildTextBasedChannel | null,
     GuildTextBasedChannel | null,
-    TextBasedChannel | null
+    TextBasedChannel | null,
+    DMChannel | null
   >;
   public channelId: Snowflake | null;
   public get createdAt(): Date;
@@ -1454,7 +1461,7 @@ export class Interaction<Cached extends CacheType = CacheType> extends Base {
   public get guild(): CacheTypeReducer<Cached, Guild, null>;
   public guildId: CacheTypeReducer<Cached, Snowflake>;
   public id: Snowflake;
-  public member: CacheTypeReducer<Cached, GuildMember, APIInteractionGuildMember>;
+  public member: CacheTypeReducer<Cached, GuildMember, APIInteractionGuildMember, GuildMember | APIInteractionGuildMember | null, null>;
   public readonly token: string;
   public type: InteractionType;
   public user: User;
