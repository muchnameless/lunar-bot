diff --git a/dist/defaultWorker.js b/dist/defaultWorker.js
index 96c3dd0a2263813b8d6d85352a8bd43326afa655..5b143f19f8d3cce9175d7c55e9adbaaaee5ae865 100644
--- a/dist/defaultWorker.js
+++ b/dist/defaultWorker.js
@@ -492,7 +492,7 @@ var WebSocketShard = class extends import_async_event_emitter.AsyncEventEmitter
       `Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`
     ]);
     const controller = new AbortController();
-    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => controller.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => controller.abort(), timeoutDuration) : null;
     if (timeout) {
       this.timeouts.set(event, timeout);
     }
diff --git a/dist/defaultWorker.mjs b/dist/defaultWorker.mjs
index 3f2b9fd1c9070ddee6e8b2b99cf8d342655526f0..95f95e833a6397eaced9d2a404172f749f50eba7 100644
--- a/dist/defaultWorker.mjs
+++ b/dist/defaultWorker.mjs
@@ -470,7 +470,7 @@ var WebSocketShard = class extends AsyncEventEmitter {
       `Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`
     ]);
     const controller = new AbortController();
-    const timeout = timeoutDuration ? setTimeout(() => controller.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? setTimeout(() => controller.abort(), timeoutDuration) : null;
     if (timeout) {
       this.timeouts.set(event, timeout);
     }
diff --git a/dist/index.js b/dist/index.js
index bf2febfa70b04c1bb34318605061fd8f9cc41c04..776124c96c54a4549473ab2faffdd629349c5ff0 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -652,7 +652,7 @@ var WebSocketShard = class extends import_async_event_emitter.AsyncEventEmitter
       `Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`
     ]);
     const controller = new AbortController();
-    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => controller.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => controller.abort(), timeoutDuration) : null;
     if (timeout) {
       this.timeouts.set(event, timeout);
     }
diff --git a/dist/index.mjs b/dist/index.mjs
index 564d813d4468221c2bf7a41cc3ae054149ee2ffb..083a0f1ac743d5b6d5efe6d4e72e8eb53e77fb10 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -611,7 +611,7 @@ var WebSocketShard = class extends AsyncEventEmitter {
       `Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`
     ]);
     const controller = new AbortController();
-    const timeout = timeoutDuration ? setTimeout(() => controller.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? setTimeout(() => controller.abort(), timeoutDuration) : null;
     if (timeout) {
       this.timeouts.set(event, timeout);
     }
