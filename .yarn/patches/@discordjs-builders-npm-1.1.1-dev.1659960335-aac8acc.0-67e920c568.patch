diff --git a/dist/components/ActionRow.d.ts b/dist/components/ActionRow.d.ts
index d7d849539c30a3ea410310e6f406da420f857b19..dc36422942f745e0965c8c661bc50c8c302311ba 100644
--- a/dist/components/ActionRow.d.ts
+++ b/dist/components/ActionRow.d.ts
@@ -7,7 +7,7 @@ import { type RestOrArray } from '../util/normalizeArray';
 export declare type MessageComponentBuilder = MessageActionRowComponentBuilder | ActionRowBuilder<MessageActionRowComponentBuilder>;
 export declare type ModalComponentBuilder = ModalActionRowComponentBuilder | ActionRowBuilder<ModalActionRowComponentBuilder>;
 export declare type MessageActionRowComponentBuilder = ButtonBuilder | SelectMenuBuilder;
-export declare type ModalActionRowComponentBuilder = TextInputBuilder;
+export declare type ModalActionRowComponentBuilder = TextInputBuilder | SelectMenuBuilder;
 export declare type AnyComponentBuilder = MessageActionRowComponentBuilder | ModalActionRowComponentBuilder;
 /**
  * Represents an action row component
diff --git a/dist/messages/formatters.cjs b/dist/messages/formatters.cjs
index 563e4b4e7f39ca4842b92e33d259a3e82a4f44d3..56b231acfbdbf46c6ee88c7e997953d41ec5557e 100644
--- a/dist/messages/formatters.cjs
+++ b/dist/messages/formatters.cjs
@@ -57,11 +57,11 @@ function channelLink(channelId, guildId) {
 function messageLink(channelId, messageId, guildId) {
   return `${typeof guildId === "undefined" ? channelLink(channelId) : channelLink(channelId, guildId)}/${messageId}`;
 }
-function time(timeOrSeconds, style) {
-  if (typeof timeOrSeconds !== "number") {
-    timeOrSeconds = Math.floor((timeOrSeconds?.getTime() ?? Date.now()) / 1e3);
+function time(timeOrMilliseconds, style) {
+  if (typeof timeOrMilliseconds !== "number") {
+    timeOrMilliseconds = timeOrMilliseconds?.getTime() ?? Date.now();
   }
-  return typeof style === "string" ? `<t:${timeOrSeconds}:${style}>` : `<t:${timeOrSeconds}>`;
+  return typeof style === "string" ? `<t:${Math.floor(timeOrMilliseconds / 1e3)}:${style}>` : `<t:${Math.floor(timeOrMilliseconds / 1e3)}>`;
 }
 const TimestampStyles = {
   ShortTime: "t",
diff --git a/dist/messages/formatters.d.ts b/dist/messages/formatters.d.ts
index 191718e4684059f5f88c8635622f5cae2e353511..6cec0e3243d25bf0739e0f5ab2bdbb3c2909f123 100644
--- a/dist/messages/formatters.d.ts
+++ b/dist/messages/formatters.d.ts
@@ -179,16 +179,16 @@ export declare function time<S extends TimestampStylesString>(date: Date, style:
 /**
  * Formats the given timestamp into a short date-time string
  *
- * @param seconds - The time to format, represents an UNIX timestamp in seconds
+ * @param seconds - The time to format, represents an UNIX timestamp in milliseconds
  */
-export declare function time<C extends number>(seconds: C): `<t:${C}>`;
+export declare function time<C extends number>(milliseconds: C): `<t:${C}>`;
 /**
  * Formats the given timestamp into a short date-time string
  *
- * @param seconds - The time to format, represents an UNIX timestamp in seconds
+ * @param seconds - The time to format, represents an UNIX timestamp in milliseconds
  * @param style - The style to use
  */
-export declare function time<C extends number, S extends TimestampStylesString>(seconds: C, style: S): `<t:${C}:${S}>`;
+export declare function time<C extends number, S extends TimestampStylesString>(milliseconds: C, style: S): `<t:${C}:${S}>`;
 /**
  * The {@link https://discord.com/developers/docs/reference#message-formatting-timestamp-styles | message formatting timestamp styles} supported by Discord
  */
diff --git a/dist/messages/formatters.mjs b/dist/messages/formatters.mjs
index c376d71f527f24908672a72d6e4a43ea4c51acab..0fa532102022081b6a749b2c3387a4759e3a9df8 100644
--- a/dist/messages/formatters.mjs
+++ b/dist/messages/formatters.mjs
@@ -53,11 +53,11 @@ function channelLink(channelId, guildId) {
 function messageLink(channelId, messageId, guildId) {
   return `${typeof guildId === "undefined" ? channelLink(channelId) : channelLink(channelId, guildId)}/${messageId}`;
 }
-function time(timeOrSeconds, style) {
-  if (typeof timeOrSeconds !== "number") {
-    timeOrSeconds = Math.floor((timeOrSeconds?.getTime() ?? Date.now()) / 1e3);
+function time(timeOrMilliseconds, style) {
+  if (typeof timeOrMilliseconds !== "number") {
+    timeOrMilliseconds = timeOrMilliseconds?.getTime() ?? Date.now();
   }
-  return typeof style === "string" ? `<t:${timeOrSeconds}:${style}>` : `<t:${timeOrSeconds}>`;
+  return typeof style === "string" ? `<t:${Math.floor(timeOrMilliseconds / 1e3)}:${style}>` : `<t:${Math.floor(timeOrMilliseconds / 1e3)}>`;
 }
 const TimestampStyles = {
   ShortTime: "t",
