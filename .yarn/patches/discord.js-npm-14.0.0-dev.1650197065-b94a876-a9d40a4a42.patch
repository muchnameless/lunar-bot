diff --git a/typings/index.d.ts b/typings/index.d.ts
index d7f8f19e7791a2a8a1f0d68c251848badea1f2ac..a0aa544d25cdd443bc0ea6a0189d35fc015daf50 100644
--- a/typings/index.d.ts
+++ b/typings/index.d.ts
@@ -384,11 +384,13 @@ export interface InteractionResponseFields<Cached extends CacheType = CacheType>
   replied: boolean;
   webhook: InteractionWebhook;
   reply(options: InteractionReplyOptions & { fetchReply: true }): Promise<GuildCacheMessage<Cached>>;
-  reply(options: string | MessagePayload | InteractionReplyOptions): Promise<void>;
+  reply(
+    options: string | MessagePayload | InteractionReplyOptions,
+  ): Promise<InteractionResponse<BooleanCache<Cached>>>;
   deleteReply(): Promise<void>;
   editReply(options: string | MessagePayload | WebhookEditMessageOptions): Promise<GuildCacheMessage<Cached>>;
   deferReply(options: InteractionDeferReplyOptions & { fetchReply: true }): Promise<GuildCacheMessage<Cached>>;
-  deferReply(options?: InteractionDeferReplyOptions): Promise<void>;
+  deferReply(options?: InteractionDeferReplyOptions): Promise<InteractionResponse<BooleanCache<Cached>>>;
   fetchReply(): Promise<GuildCacheMessage<Cached>>;
   followUp(options: string | MessagePayload | InteractionReplyOptions): Promise<GuildCacheMessage<Cached>>;
   showModal(
@@ -1474,7 +1476,7 @@ export class IntentsBitField extends BitField<GatewayIntentsString> {
   public static resolve(bit?: BitFieldResolvable<GatewayIntentsString, number>): number;
 }
 
-export type CacheType = 'cached' | 'raw' | undefined;
+export type CacheType = 'cached' | 'raw' | 'DM' | 'cachedOrDM' | undefined;
 
 export type CacheTypeReducer<
   State extends CacheType,
@@ -1482,12 +1484,18 @@ export type CacheTypeReducer<
   RawType = CachedType,
   PresentType = CachedType | RawType,
   Fallback = PresentType | null,
+  DMType = CachedType,
+  CachedOrDMType = CachedType | DMType,
 > = [State] extends ['cached']
   ? CachedType
   : [State] extends ['raw']
   ? RawType
   : [State] extends ['raw' | 'cached']
   ? PresentType
+  : [State] extends ['DM']
+  ? DMType
+  : [State] extends ['cachedOrDM']
+  ? CachedOrDMType
   : Fallback;
 
 export class Interaction<Cached extends CacheType = CacheType> extends Base {
@@ -1500,7 +1508,8 @@ export class Interaction<Cached extends CacheType = CacheType> extends Base {
     GuildTextBasedChannel | null,
     GuildTextBasedChannel | null,
     GuildTextBasedChannel | null,
-    TextBasedChannel | null
+    TextBasedChannel | null,
+    DMChannel | null
   >;
   public channelId: Snowflake | null;
   public get createdAt(): Date;
@@ -1508,7 +1517,7 @@ export class Interaction<Cached extends CacheType = CacheType> extends Base {
   public get guild(): CacheTypeReducer<Cached, Guild, null>;
   public guildId: CacheTypeReducer<Cached, Snowflake>;
   public id: Snowflake;
-  public member: CacheTypeReducer<Cached, GuildMember, APIInteractionGuildMember>;
+  public member: CacheTypeReducer<Cached, GuildMember, APIInteractionGuildMember, GuildMember | APIInteractionGuildMember | null, null>;
   public readonly token: string;
   public type: InteractionType;
   public user: User;
@@ -1799,7 +1808,7 @@ export class MessageComponentInteraction<Cached extends CacheType = CacheType> e
   public showModal(
     modal: JSONEncodable<APIModalInteractionResponseCallbackData> | ModalData | APIModalInteractionResponseCallbackData,
   ): Promise<void>;
-  public awaitModalSubmit(options: AwaitModalSubmitOptions<ModalSubmitInteraction>): Promise<ModalSubmitInteraction>;
+  public awaitModalSubmit(options: AwaitModalSubmitOptions<ModalSubmitInteraction>): Promise<ModalSubmitInteraction<Cached>>;
 }
 
 export class MessageContextMenuCommandInteraction<
