diff --git a/dist/components/ActionRow.d.ts b/dist/components/ActionRow.d.ts
index d7d849539c30a3ea410310e6f406da420f857b19..dc36422942f745e0965c8c661bc50c8c302311ba 100644
--- a/dist/components/ActionRow.d.ts
+++ b/dist/components/ActionRow.d.ts
@@ -7,7 +7,7 @@ import { type RestOrArray } from '../util/normalizeArray';
 export declare type MessageComponentBuilder = MessageActionRowComponentBuilder | ActionRowBuilder<MessageActionRowComponentBuilder>;
 export declare type ModalComponentBuilder = ModalActionRowComponentBuilder | ActionRowBuilder<ModalActionRowComponentBuilder>;
 export declare type MessageActionRowComponentBuilder = ButtonBuilder | SelectMenuBuilder;
-export declare type ModalActionRowComponentBuilder = TextInputBuilder;
+export declare type ModalActionRowComponentBuilder = TextInputBuilder | SelectMenuBuilder;
 export declare type AnyComponentBuilder = MessageActionRowComponentBuilder | ModalActionRowComponentBuilder;
 /**
  * Represents an action row component
diff --git a/dist/messages/formatters.cjs b/dist/messages/formatters.cjs
index 4983b883b375d697b5e103cf13c590418d7c324f..4c6e1fad47399c0b10f271037c6003136d10b695 100644
--- a/dist/messages/formatters.cjs
+++ b/dist/messages/formatters.cjs
@@ -53,9 +51,9 @@ function formatEmoji(emojiId, animated = false) {
 }
 function time(timeOrSeconds, style) {
   if (typeof timeOrSeconds !== "number") {
-    timeOrSeconds = Math.floor((timeOrSeconds?.getTime() ?? Date.now()) / 1e3);
+    timeOrSeconds = timeOrSeconds?.getTime() ?? Date.now();
   }
-  return typeof style === "string" ? `<t:${timeOrSeconds}:${style}>` : `<t:${timeOrSeconds}>`;
+  return typeof style === "string" ? `<t:${Math.floor(timeOrSeconds / 1e3)}:${style}>` : `<t:${Math.floor(timeOrSeconds / 1e3)}>`;
 }
 const TimestampStyles = {
   ShortTime: "t",
diff --git a/dist/messages/formatters.d.ts b/dist/messages/formatters.d.ts
index d130c417d4ce9e72eebbcd21aecd1c018297d364..65743e31a9d55a00adaa0b551b92233407162039 100644
--- a/dist/messages/formatters.d.ts
+++ b/dist/messages/formatters.d.ts
@@ -151,16 +151,16 @@ export declare function time<S extends TimestampStylesString>(date: Date, style:
 /**
  * Formats the given timestamp into a short date-time string
  *
- * @param seconds - The time to format, represents an UNIX timestamp in seconds
+ * @param seconds - The time to format, represents an UNIX timestamp in milliseconds
  */
-export declare function time<C extends number>(seconds: C): `<t:${C}>`;
+export declare function time<C extends number>(milliseconds: C): `<t:${C}>`;
 /**
  * Formats the given timestamp into a short date-time string
  *
- * @param seconds - The time to format, represents an UNIX timestamp in seconds
+ * @param seconds - The time to format, represents an UNIX timestamp in milliseconds
  * @param style - The style to use
  */
-export declare function time<C extends number, S extends TimestampStylesString>(seconds: C, style: S): `<t:${C}:${S}>`;
+export declare function time<C extends number, S extends TimestampStylesString>(milliseconds: C, style: S): `<t:${C}:${S}>`;
 /**
  * The [message formatting timestamp styles](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles) supported by Discord
  */
diff --git a/dist/messages/formatters.mjs b/dist/messages/formatters.mjs
index b6d7cd7f773df5b4d78bdc9e193e6fe998510842..085798c143e22cca79b071131f946d3390726c15 100644
--- a/dist/messages/formatters.mjs
+++ b/dist/messages/formatters.mjs
@@ -49,9 +47,9 @@ function formatEmoji(emojiId, animated = false) {
 }
 function time(timeOrSeconds, style) {
   if (typeof timeOrSeconds !== "number") {
-    timeOrSeconds = Math.floor((timeOrSeconds?.getTime() ?? Date.now()) / 1e3);
+    timeOrSeconds = timeOrSeconds?.getTime() ?? Date.now();
   }
-  return typeof style === "string" ? `<t:${timeOrSeconds}:${style}>` : `<t:${timeOrSeconds}>`;
+  return typeof style === "string" ? `<t:${Math.floor(timeOrSeconds / 1e3)}:${style}>` : `<t:${Math.floor(timeOrSeconds / 1e3)}>`;
 }
 const TimestampStyles = {
   ShortTime: "t",
