diff --git a/dist/defaultWorker.js b/dist/defaultWorker.js
index 02e36741caa5eaef7733b528549e85e281bdf388..a399a72c510b42715343e65a76b2d7039327428e 100644
--- a/dist/defaultWorker.js
+++ b/dist/defaultWorker.js
@@ -445,7 +445,7 @@ var WebSocketShard = class extends import_async_event_emitter.AsyncEventEmitter
   async waitForEvent(event, timeoutDuration) {
     this.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`]);
     const controller = new AbortController();
-    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => controller.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => controller.abort(), timeoutDuration) : null;
     if (timeout) {
       this.timeouts.set(event, timeout);
     }
diff --git a/dist/defaultWorker.mjs b/dist/defaultWorker.mjs
index 05b1eca22ae059f12455eeb9fbce7d5ace122e92..693de2e7aab740b0458b70f23e105cb7c537972b 100644
--- a/dist/defaultWorker.mjs
+++ b/dist/defaultWorker.mjs
@@ -427,7 +427,7 @@ var WebSocketShard = class extends AsyncEventEmitter {
   async waitForEvent(event, timeoutDuration) {
     this.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`]);
     const controller = new AbortController();
-    const timeout = timeoutDuration ? setTimeout(() => controller.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? setTimeout(() => controller.abort(), timeoutDuration) : null;
     if (timeout) {
       this.timeouts.set(event, timeout);
     }
diff --git a/dist/index.js b/dist/index.js
index 8bd4c73b8936390c2a16defd6de061398159a1ad..0af01237f25ec0940949203273f848b49120db0b 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -647,7 +647,7 @@ var WebSocketShard = class extends import_async_event_emitter.AsyncEventEmitter
   async waitForEvent(event, timeoutDuration) {
     this.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`]);
     const controller = new AbortController();
-    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => controller.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => controller.abort(), timeoutDuration) : null;
     if (timeout) {
       this.timeouts.set(event, timeout);
     }
diff --git a/dist/index.mjs b/dist/index.mjs
index 32f5ecb495fc22bace27b3195e10953a9aa7438a..3ebafcc283827a6b448c5826c5a9346401c69488 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -610,7 +610,7 @@ var WebSocketShard = class extends AsyncEventEmitter {
   async waitForEvent(event, timeoutDuration) {
     this.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`]);
     const controller = new AbortController();
-    const timeout = timeoutDuration ? setTimeout(() => controller.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? setTimeout(() => controller.abort(), timeoutDuration) : null;
     if (timeout) {
       this.timeouts.set(event, timeout);
     }
