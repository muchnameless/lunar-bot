diff --git a/dist/defaultWorker.js b/dist/defaultWorker.js
index 50089a19e9e2764a7b33d61bf8621e9e503d0e95..8725804db56b1831898bbeb1600c15392fd842bc 100644
--- a/dist/defaultWorker.js
+++ b/dist/defaultWorker.js
@@ -523,7 +523,7 @@ var WebSocketShard = class extends import_async_event_emitter.AsyncEventEmitter
   async waitForEvent(event, timeoutDuration) {
     this.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`]);
     const timeoutController = new AbortController();
-    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => timeoutController.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => timeoutController.abort(), timeoutDuration) : null;
     this.timeoutAbortControllers.set(event, timeoutController);
     const closeController = new AbortController();
     try {
diff --git a/dist/defaultWorker.mjs b/dist/defaultWorker.mjs
index e26944071e858bae4e39cffb8806316ce022cf8f..53caebf5a18248b0e81a74bed25ca1aec0d4f368 100644
--- a/dist/defaultWorker.mjs
+++ b/dist/defaultWorker.mjs
@@ -505,7 +505,7 @@ var WebSocketShard = class extends AsyncEventEmitter {
   async waitForEvent(event, timeoutDuration) {
     this.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`]);
     const timeoutController = new AbortController();
-    const timeout = timeoutDuration ? setTimeout(() => timeoutController.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? setTimeout(() => timeoutController.abort(), timeoutDuration) : null;
     this.timeoutAbortControllers.set(event, timeoutController);
     const closeController = new AbortController();
     try {
diff --git a/dist/index.js b/dist/index.js
index 9093415c37ff664fc8543c5560e364fe8bb93e3b..20de5819f27c0c7df7b7bfd3c99a2b09cd1473fc 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -751,7 +751,7 @@ var WebSocketShard = class extends import_async_event_emitter.AsyncEventEmitter
   async waitForEvent(event, timeoutDuration) {
     this.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`]);
     const timeoutController = new AbortController();
-    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => timeoutController.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? (0, import_node_timers.setTimeout)(() => timeoutController.abort(), timeoutDuration) : null;
     this.timeoutAbortControllers.set(event, timeoutController);
     const closeController = new AbortController();
     try {
diff --git a/dist/index.mjs b/dist/index.mjs
index 9f8ad43cc454c615d929d1c917b621f4c171ca35..4587b73daf1381b9affc9818475c306e2b25387b 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -714,7 +714,7 @@ var WebSocketShard = class extends AsyncEventEmitter {
   async waitForEvent(event, timeoutDuration) {
     this.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : "indefinitely"}`]);
     const timeoutController = new AbortController();
-    const timeout = timeoutDuration ? setTimeout(() => timeoutController.abort(), timeoutDuration).unref() : null;
+    const timeout = timeoutDuration ? setTimeout(() => timeoutController.abort(), timeoutDuration) : null;
     this.timeoutAbortControllers.set(event, timeoutController);
     const closeController = new AbortController();
     try {
